1. What is React?
Ans. React is an open source javascript library for building user interfaces developed by Facebook.

2. Explain JSX?
Ans. JSX(JavaScript XML) is a syntax extension for javascript recommended by React for describing
what the UI should look like.

3. What is the virtual DOM?
Ans. Virtual DOM is the light weight copy of actual DOM in memory. React uses it to improve performance by
updating only the changed parts of actual DOM in memory.

4. What is significance of keys in React?
Ans. Keys are used to uniquely identify and differentiate between the components.
They help React to know which components are modified, added or removed.

5. What are state and props in React?
Ans. State is an internal datastore that belongs to a specific component, and it can be changed over
time. Props are properties passed to a component from its parent, and they are immutable.

6. What is the difference between the state and the props?
Ans. State is internal to a component and can be changed over time, while props are external and passed to a component.

7. Explain the concept of lifting state up?
Ans. Lifting state up is a pattern where the state of child component is moved to its parent component,
allowing multiple child components to share the same state.

8. What is the purpose of setstate in react?
Ans. Setstate is used to update the state of a component and trigger the re-rendering of the component.

9. What is react router?
Ans. React router is a library that enables navigation among views in react application, allowing for the
development of single page applications.

10. Explain the useEffect hook in react?
Ans. The useEffect hook in react is used for side-effects in functional components. Such as data fetching,
subscriptions or manually changing the DOM.

11. What are controlled components in React?
Ans. Controlled components are components where the form data is controlled by React state. The input elements receive their current value from the state and have their value updated through a callback function.

12. What is Redux, and why is it used?
Ans: Redux is a state management library for JavaScript applications, commonly used with React. It helps manage the state of an application in a predictable way.

13. Explain the concept of higher-order components (HOC).
Ans: Higher-order components are functions that take a component and return a new component with additional features or props.

14. What is the purpose of the useReducer hook?
Ans: The useReducer hook is used for managing complex state logic in React applications. It is an alternative to useState when state transitions are more complex.

15. What is the significance of the key attribute in React lists?
Ans: The key attribute is used to uniquely identify the elements in a list. It helps React effeciently update the DOM when the list changes.

16. What is the difference between the class components and functional components?
Ans: Class components use ES6 classes and have additional features like state and lifecycle methods,
     while functional components are simpler and are often used with hooks.

17. What are React hooks?
Ans: React hooks are functions that allow functional components to use state, lifecycle methods and other react feactures.

18. Explain the purpose of useContext hook?
Ans: The useContext hook is used to access the value of a React context within a functional component.
     It is used to overcome the problem of props drilling.

19. What is the purpose of the componentDidMount lifecycle method?
Ans: ComponentDidMount is invoked immediately after a component is mounted, making it suitable for initial AJAX requests or setting up subscriptions.

20. What is the React developer tool?
Ans: The React Developer tool is a browser extension that allows developers to inspect and debug React component hierarchies in the Chrome and firefox browsers.

21. Explain the concept of context in React.
Ans: Context provides a way to pass data through the component tree without having to pass props manually at every level. It is often used to share
     values like themes or authentication status.

22. What are the advantages of using React?
Ans: React offers a virtual DOM for improved performance, a component-based architecture for modular development, and a strong community support, among other advantages.

23. How does React handle prop drilling, and how can it be avoided?
Ans: Prop drilling occurs when props are passed down through multiple levels of components. It can be avoided by using context or state management libraries like Redux.
